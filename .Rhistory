#cambia nombres de atributos para carga en BBDD
names(nIESct2)[1]<-paste("ctmetaValue1")
names(nIESct2)[13]<-paste("ctmetaValue21")
names(nIESct2)[14]<-paste("ctmetaValue22")
## Hasta aquí procesamientos generales del data sets, desde ahora, procesamientos específicos para tablas relacionadas
## Hasta aquí procesamientos generales del data sets, desde ahora, procesamientos específicos para tablas relacionadas
# creación subset para tabla de tipo de indicador
nIESct2cttype <- subset(nIESct2, select = c(17, 16))
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD
nIESct2cttype$id <- 6:nrow(nIESct2cttype)
#además de id de la base de datos, se considera un código de la organización, puede ser igual al id o no
nIESct2cttype$cttypeId <- nIESct2cttype$id
nIESct2 <- nIES
#deja solo valore
nIESct2 <- subset(nIESct, nIESct$NIVEL.GLOBAL == "Pregrado")
#Se crea un código de tipo de institución que se concatena luego con el área del conocimiento para el nivel de desagregación
nIESct2$clasificacion1Codigo  <-
ifelse(grepl("Institutos Profesionales", nIESct2$CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1, ignore.case = T), "IP",
ifelse(grepl("Centros de Formación Técnica", nIESct2$CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1, ignore.case = T), "CFT",
ifelse(grepl("Universidades", nIESct2$CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1, ignore.case = T), "UNIVERSIDAD","Otro")))
nIESct2$level <- paste(nIESct2$clasificacion1Codigo,nIESct2$OCDE.ÁREA, sep ="-" )
#Crea atributo active de la bbdd
nIESct2$active <- 1
#cambia nombres de atributos para carga en BBDD
names(nIESct2)[1]<-paste("ctmetaValue1")
names(nIESct2)[13]<-paste("ctmetaValue21")
names(nIESct2)[14]<-paste("ctmetaValue22")
## Hasta aquí procesamientos generales del data sets, desde ahora, procesamientos específicos para tablas relacionadas
## Hasta aquí procesamientos generales del data sets, desde ahora, procesamientos específicos para tablas relacionadas
# creación subset para tabla de tipo de indicador
nIESct2cttype <- subset(nIESct2, select = c(17, 16))
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD
nIESct2cttype$id <- 1:nrow(nIESct2cttype)
#además de id de la base de datos, se considera un código de la organización, puede ser igual al id o no
nIESct2cttype$cttypeId <- nIESct2cttype$id
nIESct2 <- nIES
#deja solo valore
nIESct2 <- subset(nIESct, nIESct$NIVEL.GLOBAL == "Pregrado")
#Se crea un código de tipo de institución que se concatena luego con el área del conocimiento para el nivel de desagregación
nIESct2$clasificacion1Codigo  <-
ifelse(grepl("Institutos Profesionales", nIESct2$CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1, ignore.case = T), "IP",
ifelse(grepl("Centros de Formación Técnica", nIESct2$CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1, ignore.case = T), "CFT",
ifelse(grepl("Universidades", nIESct2$CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1, ignore.case = T), "UNIVERSIDAD","Otro")))
nIESct2$level <- paste(nIESct2$clasificacion1Codigo,nIESct2$OCDE.ÁREA, sep ="-" )
#Crea atributo active de la bbdd
nIESct2$active <- 1
#cambia nombres de atributos para carga en BBDD
names(nIESct2)[1]<-paste("ctmetaValue1")
names(nIESct2)[13]<-paste("ctmetaValue21")
names(nIESct2)[14]<-paste("ctmetaValue22")
## Hasta aquí procesamientos generales del data sets, desde ahora, procesamientos específicos para tablas relacionadas
## Hasta aquí procesamientos generales del data sets, desde ahora, procesamientos específicos para tablas relacionadas
# creación subset para tabla de tipo de indicador
nIESct2cttype <- subset(nIESct2, select = c(17, 16))
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD
nIESct2cttype$id <- 1:nrow(nIESct2cttype)
#además de id de la base de datos, se considera un código de la organización, puede ser igual al id o no
nIESct2cttype$cttypeId <- nIESct2cttype$id
# creación subset para tabla de tipo de indicador
nIESct2cttype <- subset(nIESct2, select = c(17, 16))
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD para poder desplazar id e posición correcta
nIESct2cttype$id <- 1:nrow(nIESct2cttype)
nIESct2cttype$id <- nIESct2cttype$id + 5
#además de id de la base de datos, se considera un código de la organización, puede ser igual al id o no
nIESct2cttype$cttypeId <- nIESct2cttype$id
View(nIESct2cttype)
# creación subset para tabla de tipo de indicador
nIESct2cttype <- subset(nIESct2, select = c(17, 16))
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD para poder desplazar id e posición correcta
nIESct2cttype$id <- 1:nrow(nIESct2cttype)
ultimoIdBBDD = 5
nIESct2cttype$id <- nIESct2cttype$id + ultimoIdBBDD
#además de id de la base de datos, se considera un código de la organización, puede ser igual al id o no
nIESct2cttype$cttypeId <- nIESct2cttype$id
nIESct2cttype$cttypeMeta1 <- 0
names(nIESct2cttype)[2]<-paste("cttypeTitle")
View(nIESct2cttype)
nIESct2cttype <- subset(nIESct2cttype, select = c(1,3,4,2,5))
# creación subset para tabla de tipo de indicador
nIESct2cttype <- subset(nIESct2, select = c(17, 16))
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD para poder desplazar id e posición correcta
nIESct2cttype$id <- 1:nrow(nIESct2cttype)
ultimoIdBBDD = 5
nIESct2cttype$id <- nIESct2cttype$id + ultimoIdBBDD
#además de id de la base de datos, se considera un código de la organización, puede ser igual al id o no
nIESct2cttype$cttypeId <- nIESct2cttype$id
#Crea atributo con el número de decimales del tipo de indicador, en este caso es 0 dado que es una cuenta
nIESct2cttype$cttypeMeta1 <- 0
#cambia el nombre al nombre para calzar con nombre de la BBDD
names(nIESct2cttype)[2]<-paste("cttypeTitle")
#reordena el dataset solo por simplicidad
nIESct2cttype <- subset(nIESct2cttype, select = c(1,3,4,2,5))
#exporta en csv para carga en la BBDD
write.table(nIESct2cttype, "nIESct2cttype.csv", sep="$", append=FALSE, row.names = F)
#Llama archivo para instalaciones
source("instalaciones.R", echo = TRUE)
#importación del archivo formato csv de SIES
siesMatriculas <- read.table("20191117_fuentes/Matricula_2007_AL_2019_13_08_2019_WEB.csv", header=TRUE, sep=";",  quote = "" , fileEncoding="latin1")
#Crea variable de período
siesMatriculas$PERIODO <- gsub("MAT_", "", siesMatriculas$AÑO)
#Genera dataset con cuentas por carrera por período
nIES <- siesMatriculas  %>%
group_by(PERIODO, CÓDIGO.CARRERA, NOMBRE.CARRERA, NIVEL.GLOBAL, CÓDIGO.DE.INSTITUCIÓN, NOMBRE.INSTITUCIÓN,CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1, CLASIFICACIÓN.INSTITUCIÓN.NIVEL.2, CLASIFICACIÓN.INSTITUCIÓN.NIVEL.3,  OCDE.ÁREA, OCDE.SUBAREA) %>%
summarise(n = n(),
nMatriculados = sum(TOTAL.MATRICULADOS),
nNuevos = sum(TOTAL.MATRICULADOS.PRIMER.AÑO)
)
## Desde aquí cálculo de indicador de matriculados por tipo de IES y por institución, este cálculo es directo y luego se cargan atributos auxiliares usando excel
## Desde aquí cálculo de indicador de matriculados por tipo de IES y por institución, este cálculo es directo y luego se cargan atributos auxiliares usando excel
## Desde aquí cálculo de indicador de matriculados por tipo de IES y por institución
#Crea una copia de trabajo para poder volver a este punto
nIESct <- nIES
#deja solo valore
nIESct <- subset(nIESct, nIESct$NIVEL.GLOBAL == "Pregrado")
#reemplaza valores NA de las cuentas de matriculados nuevos y antiguos
nIESct$nMatriculados[is.na(nIESct$nMatriculados)] <- 0
nIESct$nNuevos[is.na(nIESct$nNuevos)] <- 0
#exporta una copia del dataset hasta acá
write.xlsx(nIES, "nIESct.xlsx")
#crea y exporta un dataset con la suma de los matriculados por tipo de IES
nIESctCATEGORIA1 <- nIESct %>%
group_by(PERIODO, CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1) %>%
summarise(n = n(),
nMatriculados = sum(nMatriculados),
nNuevos = sum(nNuevos)
)
write.xlsx(nIESctCATEGORIA1, "nIESctCATEGORIA1.xlsx")
#crea y exporta un dataset con la suma de los matriculados por institución
nIESctUNIVERSIDADES <- nIESct %>%
group_by(PERIODO, CÓDIGO.DE.INSTITUCIÓN, NOMBRE.INSTITUCIÓN,CLASIFICACIÓN.INSTITUCIÓN.NIVEL.3, CLASIFICACIÓN.INSTITUCIÓN.NIVEL.2, CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1) %>%
summarise(n = n(),
nMatriculados = sum(nMatriculados),
nNuevos = sum(nNuevos)
)
write.xlsx(nIESctUNIVERSIDADES, "nIESctUNIVERSIDADES.xlsx")
## Desde aquí cálculo de indicador de carreras, se utiliza una clasificación por tipo de institución / area del conocimiento para poder gestionar el volumen de datos. Este cálculo es más largo, por lo que se usará r
## Desde aquí cálculo de indicador de carreras, se utiliza una clasificación por tipo de institución / area del conocimiento para poder gestionar el volumen de datos. Este cálculo es más largo, por lo que se usará r
nIESct2 <- nIES
#deja solo valore
nIESct2 <- subset(nIESct, nIESct$NIVEL.GLOBAL == "Pregrado")
#Se crea un código de tipo de institución que se concatena luego con el área del conocimiento para el nivel de desagregación
nIESct2$clasificacion1Codigo  <-
ifelse(grepl("Institutos Profesionales", nIESct2$CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1, ignore.case = T), "IP",
ifelse(grepl("Centros de Formación Técnica", nIESct2$CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1, ignore.case = T), "CFT",
ifelse(grepl("Universidades", nIESct2$CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1, ignore.case = T), "UNIVERSIDAD","Otro")))
nIESct2$level <- paste(nIESct2$clasificacion1Codigo,nIESct2$OCDE.ÁREA, sep ="-" )
#Crea atributo active de la bbdd
nIESct2$active <- 1
#cambia nombres de atributos para carga en BBDD
names(nIESct2)[1]<-paste("ctmetaValue1")
names(nIESct2)[13]<-paste("ctmetaValue21")
names(nIESct2)[14]<-paste("ctmetaValue22")
## Hasta aquí procesamientos generales del data sets, desde ahora, procesamientos específicos para tablas relacionadas
## Hasta aquí procesamientos generales del data sets, desde ahora, procesamientos específicos para tablas relacionadas
# creación subset para tabla de tipo de indicador
nIESct2cttype <- subset(nIESct2, select = c(17, 16))
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD para poder desplazar id e posición correcta
nIESct2cttype$id <- 1:nrow(nIESct2cttype)
ultimoIdBBDD = 5
nIESct2cttype$id <- nIESct2cttype$id + ultimoIdBBDD
#además de id de la base de datos, se considera un código de la organización, puede ser igual al id o no
nIESct2cttype$cttypeId <- nIESct2cttype$id
#Crea atributo con el número de decimales del tipo de indicador, en este caso es 0 dado que es una cuenta
nIESct2cttype$cttypeMeta1 <- 0
#cambia el nombre al nombre para calzar con nombre de la BBDD
names(nIESct2cttype)[2]<-paste("cttypeTitle")
#reordena el dataset solo por simplicidad
nIESct2cttype <- subset(nIESct2cttype, select = c(1,3,4,2,5))
#exporta en csv para carga en la BBDD
write.table(nIESct2cttype, "nIESct2cttype.csv", sep="$", append=FALSE, row.names = F)
# creación subset para tabla de tipo de indicador
nIESct2cttype <- subset(nIESct2, select = c(17, 16))
nIESct2cttype
# creación subset para tabla de tipo de indicador
nIESct2cttype <- subset(nIESct2, select = c(17, 16))
#elimina duplicados
nIESct2cttype <- nIESct2cttype[!duplicated(nIESct2cttype$level),]
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD para poder desplazar id e posición correcta
nIESct2cttype$id <- 1:nrow(nIESct2cttype)
ultimoIdBBDD = 5
nIESct2cttype$id <- nIESct2cttype$id + ultimoIdBBDD
#además de id de la base de datos, se considera un código de la organización, puede ser igual al id o no
nIESct2cttype$cttypeId <- nIESct2cttype$id
#Crea atributo con el número de decimales del tipo de indicador, en este caso es 0 dado que es una cuenta
nIESct2cttype$cttypeMeta1 <- 0
#cambia el nombre al nombre para calzar con nombre de la BBDD
names(nIESct2cttype)[2]<-paste("cttypeTitle")
#reordena el dataset solo por simplicidad
nIESct2cttype <- subset(nIESct2cttype, select = c(1,3,4,2,5))
#exporta en csv para carga en la BBDD
write.table(nIESct2cttype, "nIESct2cttype.csv", sep="$", append=FALSE, row.names = F)
write.table(nIESct2cttype, "nIESct2cttype.csv", sep="$", append=FALSE, row.names = F, quote = FALSE, na = "NA")
# creación subset para tabla de nivel de la unidad
nIESct2ctlevel <- subset(nIESct2, select = c(17, 16))
#elimina duplicados
nIESct2ctlevel <- nIESct2ctlevel[!duplicated(nIESct2ctlevel$level),]
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD para poder desplazar id e posición correcta
nIESct2ctlevel$id <- 1:nrow(nIESct2ctlevel)
ultimoIdBBDD = 8
nIESct2ctlevel$id <- nIESct2ctlevel$id + ultimoIdBBDD
#además de id de la base de datos, se considera un código de la organización, puede ser igual al id o no
nIESct2ctlevel$ctlevelId <- nIESct2ctlevel$id
View(nIESct2ctlevel)
#cambia el nombre al nombre para calzar con nombre de la BBDD
names(nIESct2ctlevel)[2]<-paste("ctlevelTitle")
#reordena el dataset solo por simplicidad
colnames(nIESct2ctlevel)
# creación subset para tabla de nivel de la unidad
# creación subset para tabla de nivel de la unidad
nIESct2ctlevel <- subset(nIESct2, select = c(17, 16))
#elimina duplicados
nIESct2ctlevel <- nIESct2ctlevel[!duplicated(nIESct2ctlevel$level),]
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD para poder desplazar id e posición correcta
nIESct2ctlevel$id <- 1:nrow(nIESct2ctlevel)
ultimoIdBBDD = 8
nIESct2ctlevel$id <- nIESct2ctlevel$id + ultimoIdBBDD
#además de id de la base de datos, se considera un código de la organización, puede ser igual al id o no
nIESct2ctlevel$ctlevelId <- nIESct2ctlevel$id
#cambia el nombre al nombre para calzar con nombre de la BBDD
names(nIESct2ctlevel)[2]<-paste("ctlevelTitle")
#reordena el dataset solo por simplicidad
nIESct2ctlevel <- subset(nIESct2ctlevel, select = c(1,3,4,2))
#exporta en csv para carga en la BBDD
write.table(nIESct2ctlevel, "nIESct2ctlevel.csv", sep="$", append=FALSE, row.names = F, quote = FALSE, na = "NA")
nIESct2cttype
nIESct2ctlevel
names(nIESct2cttype)[2]<-paste("ctlevelTitle")
nIESct2cttype_ctlevel <- merge(nIESct2ctlevel , nIESct2cttype , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
names(nIESct2cttype)[2]<-paste("cttypeTitle")
View(nIESct2cttype)
View(nIESct2cttype_ctlevel)
nIESct2cttype
#Llama archivo para instalaciones
source("instalaciones.R", echo = TRUE)
#importación del archivo formato csv de SIES
siesMatriculas <- read.table("20191117_fuentes/Matricula_2007_AL_2019_13_08_2019_WEB.csv", header=TRUE, sep=";",  quote = "" , fileEncoding="latin1")
#Crea variable de período
siesMatriculas$PERIODO <- gsub("MAT_", "", siesMatriculas$AÑO)
#Genera dataset con cuentas por carrera por período
nIES <- siesMatriculas  %>%
group_by(PERIODO, CÓDIGO.CARRERA, NOMBRE.CARRERA, NIVEL.GLOBAL, CÓDIGO.DE.INSTITUCIÓN, NOMBRE.INSTITUCIÓN,CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1, CLASIFICACIÓN.INSTITUCIÓN.NIVEL.2, CLASIFICACIÓN.INSTITUCIÓN.NIVEL.3,  OCDE.ÁREA, OCDE.SUBAREA) %>%
summarise(n = n(),
nMatriculados = sum(TOTAL.MATRICULADOS),
nNuevos = sum(TOTAL.MATRICULADOS.PRIMER.AÑO)
)
## Desde aquí cálculo de indicador de matriculados por tipo de IES y por institución, este cálculo es directo y luego se cargan atributos auxiliares usando excel
## Desde aquí cálculo de indicador de matriculados por tipo de IES y por institución, este cálculo es directo y luego se cargan atributos auxiliares usando excel
## Desde aquí cálculo de indicador de matriculados por tipo de IES y por institución
#Crea una copia de trabajo para poder volver a este punto
nIESct <- nIES
#deja solo valore
nIESct <- subset(nIESct, nIESct$NIVEL.GLOBAL == "Pregrado")
#reemplaza valores NA de las cuentas de matriculados nuevos y antiguos
nIESct$nMatriculados[is.na(nIESct$nMatriculados)] <- 0
nIESct$nNuevos[is.na(nIESct$nNuevos)] <- 0
#exporta una copia del dataset hasta acá
write.xlsx(nIES, "nIESct.xlsx")
#crea y exporta un dataset con la suma de los matriculados por tipo de IES
nIESctCATEGORIA1 <- nIESct %>%
group_by(PERIODO, CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1) %>%
summarise(n = n(),
nMatriculados = sum(nMatriculados),
nNuevos = sum(nNuevos)
)
write.xlsx(nIESctCATEGORIA1, "nIESctCATEGORIA1.xlsx")
#crea y exporta un dataset con la suma de los matriculados por institución
nIESctUNIVERSIDADES <- nIESct %>%
group_by(PERIODO, CÓDIGO.DE.INSTITUCIÓN, NOMBRE.INSTITUCIÓN,CLASIFICACIÓN.INSTITUCIÓN.NIVEL.3, CLASIFICACIÓN.INSTITUCIÓN.NIVEL.2, CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1) %>%
summarise(n = n(),
nMatriculados = sum(nMatriculados),
nNuevos = sum(nNuevos)
)
write.xlsx(nIESctUNIVERSIDADES, "nIESctUNIVERSIDADES.xlsx")
## Desde aquí cálculo de indicador de carreras, se utiliza una clasificación por tipo de institución / area del conocimiento para poder gestionar el volumen de datos. Este cálculo es más largo, por lo que se usará r
## Desde aquí cálculo de indicador de carreras, se utiliza una clasificación por tipo de institución / area del conocimiento para poder gestionar el volumen de datos. Este cálculo es más largo, por lo que se usará r
nIESct2 <- nIES
#deja solo valore
nIESct2 <- subset(nIESct, nIESct$NIVEL.GLOBAL == "Pregrado")
#Se crea un código de tipo de institución que se concatena luego con el área del conocimiento para el nivel de desagregación
nIESct2$clasificacion1Codigo  <-
ifelse(grepl("Institutos Profesionales", nIESct2$CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1, ignore.case = T), "IP",
ifelse(grepl("Centros de Formación Técnica", nIESct2$CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1, ignore.case = T), "CFT",
ifelse(grepl("Universidades", nIESct2$CLASIFICACIÓN.INSTITUCIÓN.NIVEL.1, ignore.case = T), "UNIVERSIDAD","Otro")))
nIESct2$level <- paste(nIESct2$clasificacion1Codigo,nIESct2$OCDE.ÁREA, sep ="-" )
#Crea atributo active de la bbdd
nIESct2$active <- 1
#cambia nombres de atributos para carga en BBDD
names(nIESct2)[1]<-paste("ctmetaValue1")
names(nIESct2)[13]<-paste("ctmetaValue21")
names(nIESct2)[14]<-paste("ctmetaValue22")
## Hasta aquí procesamientos generales del data sets, desde ahora, procesamientos específicos para tablas relacionadas
## Hasta aquí procesamientos generales del data sets, desde ahora, procesamientos específicos para tablas relacionadas
# creación subset para tabla de tipo de indicador
# creación subset para tabla de tipo de indicador
nIESct2cttype <- subset(nIESct2, select = c(17, 16))
#elimina duplicados
nIESct2cttype <- nIESct2cttype[!duplicated(nIESct2cttype$level),]
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD para poder desplazar id e posición correcta
nIESct2cttype$id <- 1:nrow(nIESct2cttype)
ultimoIdBBDD = 5
nIESct2cttype$id <- nIESct2cttype$id + ultimoIdBBDD
#además de id de la base de datos, se considera un código de la organización, puede ser igual al id o no
nIESct2cttype$cttypeId <- nIESct2cttype$id
#Crea atributo con el número de decimales del tipo de indicador, en este caso es 0 dado que es una cuenta
nIESct2cttype$cttypeMeta1 <- 0
#cambia el nombre al nombre para calzar con nombre de la BBDD
names(nIESct2cttype)[2]<-paste("cttypeTitle")
#reordena el dataset solo por simplicidad
nIESct2cttype <- subset(nIESct2cttype, select = c(1,3,4,2,5))
#exporta en csv para carga en la BBDD
write.table(nIESct2cttype, "nIESct2cttype.csv", sep="$", append=FALSE, row.names = F, quote = FALSE, na = "NA")
# creación subset para tabla de nivel de la unidad
# creación subset para tabla de nivel de la unidad
nIESct2ctlevel <- subset(nIESct2, select = c(17, 16))
#elimina duplicados
nIESct2ctlevel <- nIESct2ctlevel[!duplicated(nIESct2ctlevel$level),]
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD para poder desplazar id e posición correcta
nIESct2ctlevel$id <- 1:nrow(nIESct2ctlevel)
ultimoIdBBDD = 8
nIESct2ctlevel$id <- nIESct2ctlevel$id + ultimoIdBBDD
#además de id de la base de datos, se considera un código de la organización, puede ser igual al id o no
nIESct2ctlevel$ctlevelId <- nIESct2ctlevel$id
#cambia el nombre al nombre para calzar con nombre de la BBDD
names(nIESct2ctlevel)[2]<-paste("ctlevelTitle")
#reordena el dataset solo por simplicidad
nIESct2ctlevel <- subset(nIESct2ctlevel, select = c(1,3,4,2))
#exporta en csv para carga en la BBDD
write.table(nIESct2ctlevel, "nIESct2ctlevel.csv", sep="$", append=FALSE, row.names = F, quote = FALSE, na = "NA")
##antes de avanzar, establece relaciones entre tipos de indicadores y niveles de unidades
##antes de avanzar, establece relaciones entre tipos de indicadores y niveles de unidades
names(nIESct2cttype)[4]<-paste("ctlevelTitle")
nIESct2cttype_ctlevel <- merge(nIESct2ctlevel , nIESct2cttype , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
names(nIESct2cttype)[4]<-paste("cttypeTitle")
nIESct2ctlevel
nIESct2cttype
nIESct2cttype_ctlevel
View(nIESct2cttype_ctlevel)
nIESct2cttype_ctlevel <- subset(nIESct2cttype_ctlevel, select = c(3,6))
nIESct2cttype_ctlevel
names(nIESct2cttype)[4]<-paste("ctlevelTitle")
nIESct2cttype_ctlevel <- merge(nIESct2ctlevel , nIESct2cttype , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
names(nIESct2cttype)[4]<-paste("cttypeTitle")
nIESct2cttype_ctlevel <- subset(nIESct2cttype_ctlevel, select = c(3,6))
names(nIESct2cttype_ctlevel)[1]<-paste("ctlevel_id")
names(nIESct2cttype_ctlevel)[2]<-paste("cttype_id")
nIESct2cttype_ctlevel
##antes de avanzar, establece relaciones entre tipos de indicadores y niveles de unidades
##antes de avanzar, establece relaciones entre tipos de indicadores y niveles de unidades
names(nIESct2cttype)[4]<-paste("ctlevelTitle")
nIESct2cttype_ctlevel <- merge(nIESct2ctlevel , nIESct2cttype , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
names(nIESct2cttype)[4]<-paste("cttypeTitle")
nIESct2cttype_ctlevel <- subset(nIESct2cttype_ctlevel, select = c(3,6))
names(nIESct2cttype_ctlevel)[1]<-paste("ctlevel_id")
names(nIESct2cttype_ctlevel)[2]<-paste("cttype_id")
write.table(nIESct2cttype_ctlevel, "nIESct2cttype_ctlevel.csv", sep="$", append=FALSE, row.names = F, quote = FALSE, na = "NA")
nIESct2
View(nIESct2)
nIESct2ctunits <- nIESct2
View(nIESct2ctunits)
colnames(nIESct2ctunits)
nIESct2ctunitsLevels <- subset(nIESct2ctunits , select = c(2, 16) )
nIESct2ctunitsLevels
nIESct2ctlevel
nIESct2ctunitsLevels
nIESct2ctlevel
nIESct2ctunits <- nIESct2
nIESct2ctunitsLevels <- subset(nIESct2ctunits , select = c(2, 16) )
names(nIESct2ctunitsLevels)[2]<-paste("ctlevelTitle")
nIESct2ctunitsLevels <- merge(nIESct2ctunitsLevels , nIESct2ctlevel , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
nIESct2ctunitsLevels
View(nIESct2ctunitsLevels)
nIESct2ctunits <- nIESct2
nIESct2ctunitsLevels <- subset(nIESct2ctunits , select = c(2, 16) )
nIESct2ctlevel
nIESct2ctunitsLevels
nIESct2ctunitsLevels <- nIESct2ctunitsLevels[!duplicated(nIESct2ctunitsLevels$level),]
nIESct2ctunitsLevels
nIESct2ctunits <- nIESct2
nIESct2ctunitsLevels <- subset(nIESct2ctunits , select = c(2, 16) )
nIESct2ctunitsLevels <- nIESct2ctunitsLevels[!duplicated(nIESct2ctunitsLevels$level),]
names(nIESct2ctunitsLevels)[2]<-paste("ctlevelTitle")
nIESct2ctunitsLevels <- merge(nIESct2ctunitsLevels , nIESct2ctlevel , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
nIESct2ctunitsLevels
nIESct2ctunitsLevels <- subset(nIESct2ctunitsLevels, select = c(2,5))
nIESct2ctunitsLevels
View(nIESct2ctunits)
nIESct2ctunits <- merge(nIESct2ctunits , nIESct2ctunitsLevels , by.x = 'CÓDIGO.CARRERA',by.y ='CÓDIGO.CARRERA', all.x=TRUE)
View(nIESct2ctunits)
colnames(nIESct2ctunits)
View(nIESct2ctunits)
nIESct2ctunits$ctunitTitle <- paste( nIESct2ctunits$NOMBRE.CARRERA," ( ", nIESct2ctunits$NOMBRE.INSTITUCIÓN, ")")
nIESct2ctunits <- nIESct2
nIESct2ctunitsLevels <- subset(nIESct2ctunits , select = c(2, 16) )
nIESct2ctunitsLevels <- nIESct2ctunitsLevels[!duplicated(nIESct2ctunitsLevels$level),]
names(nIESct2ctunitsLevels)[2]<-paste("ctlevelTitle")
nIESct2ctunitsLevels <- merge(nIESct2ctunitsLevels , nIESct2ctlevel , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
nIESct2ctunitsLevels <- subset(nIESct2ctunitsLevels, select = c(2,5))
nIESct2ctunits <- merge(nIESct2ctunits , nIESct2ctunitsLevels , by.x = 'CÓDIGO.CARRERA',by.y ='CÓDIGO.CARRERA', all.x=TRUE)
names(nIESct2ctunits)[18]<-paste("ctlevel_id")
nIESct2ctunits$ctunitTitle <- paste( nIESct2ctunits$NOMBRE.CARRERA," ( ", nIESct2ctunits$NOMBRE.INSTITUCIÓN, ")")
nIESct2ctunits$ctunitTitle <- str_to_title(paste( nIESct2ctunits$NOMBRE.CARRERA," ( ", nIESct2ctunits$NOMBRE.INSTITUCIÓN, ")"), locale = "es")
View(nIESct2ctunits)
nIESct2ctunitsLevels
View(nIESct2ctunitsLevels)
nIESct2ctunits <- nIESct2
nIESct2ctunitsLevels <- subset(nIESct2ctunits , select = c(2, 16) )
nIESct2ctunitsLevels
nIESct2ctunits <- nIESct2
nIESct2ctunitsLevels <- subset(nIESct2ctunits , select = c(2, 16) )
nIESct2ctunitsLevels <- nIESct2ctunitsLevels[!duplicated(nIESct2ctunitsLevels$CÓDIGO.CARRERA),]
names(nIESct2ctunitsLevels)[2]<-paste("ctlevelTitle")
nIESct2ctunitsLevels <- merge(nIESct2ctunitsLevels , nIESct2ctlevel , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
nIESct2ctunitsLevels <- subset(nIESct2ctunitsLevels, select = c(2,5))
nIESct2ctunits <- merge(nIESct2ctunits , nIESct2ctunitsLevels , by.x = 'CÓDIGO.CARRERA',by.y ='CÓDIGO.CARRERA', all.x=TRUE)
names(nIESct2ctunits)[18]<-paste("ctlevel_id")
nIESct2ctunits$ctunitTitle <- str_to_title(paste( nIESct2ctunits$NOMBRE.CARRERA," ( ", nIESc
nIESct2ctunits <- nIESct2
nIESct2ctunitsLevels <- subset(nIESct2ctunits , select = c(2, 16) )
nIESct2ctunitsLevels <- nIESct2ctunitsLevels[!duplicated(nIESct2ctunitsLevels$CÓDIGO.CARRERA),]
names(nIESct2ctunitsLevels)[2]<-paste("ctlevelTitle")
nIESct2ctunitsLevels <- merge(nIESct2ctunitsLevels , nIESct2ctlevel , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
nIESct2ctunitsLevels <- subset(nIESct2ctunitsLevels, select = c(2,5))
nIESct2ctunits <- merge(nIESct2ctunits , nIESct2ctunitsLevels , by.x = 'CÓDIGO.CARRERA',by.y ='CÓDIGO.CARRERA', all.x=TRUE)
names(nIESct2ctunits)[18]<-paste("ctlevel_id")
nIESct2ctunits$ctunitTitle <- str_to_title(paste( nIESct2ctunits$NOMBRE.CARRERA," ( ", nIESct2ctunits$NOMBRE.INSTITUCIÓN, ")"), locale = "es")
nIESct2ctunits <- nIESct2
nIESct2ctunitsLevels <- subset(nIESct2ctunits , select = c(2, 16) )
nIESct2ctunitsLevels <- nIESct2ctunitsLevels[!duplicated(nIESct2ctunitsLevels$CÓDIGO.CARRERA),]
names(nIESct2ctunitsLevels)[2]<-paste("ctlevelTitle")
nIESct2ctunitsLevels <- merge(nIESct2ctunitsLevels , nIESct2ctlevel , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
nIESct2ctunitsLevels <- subset(nIESct2ctunitsLevels, select = c(2,5))
nIESct2ctunits <- merge(nIESct2ctunits , nIESct2ctunitsLevels , by.x = 'CÓDIGO.CARRERA',by.y ='CÓDIGO.CARRERA', all.x=TRUE)
names(nIESct2ctunits)[18]<-paste("ctlevel_id")
nIESct2ctunits$ctunitTitle <- str_to_title(paste( nIESct2ctunits$NOMBRE.CARRERA," ( ", nIESct2ctunits$NOMBRE.INSTITUCIÓN, ")"), locale = "es")
nIESct2ctunits <- nIESct2
nIESct2ctunitsLevels <- subset(nIESct2ctunits , select = c(2, 16) )
nIESct2ctunitsLevels <- nIESct2ctunitsLevels[!duplicated(nIESct2ctunitsLevels$CÓDIGO.CARRERA),]
names(nIESct2ctunitsLevels)[2]<-paste("ctlevelTitle")
nIESct2ctunitsLevels <- merge(nIESct2ctunitsLevels , nIESct2ctlevel , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
nIESct2ctunitsLevels <- subset(nIESct2ctunitsLevels, select = c(2,5))
nIESct2ctunits <- merge(nIESct2ctunits , nIESct2ctunitsLevels , by.x = 'CÓDIGO.CARRERA',by.y ='CÓDIGO.CARRERA', all.x=TRUE)
names(nIESct2ctunits)[18]<-paste("ctlevel_id")
nIESct2ctunits$ctunitTitle <- str_to_title(paste( nIESct2ctunits$NOMBRE.CARRERA," ( ", nIESct2ctunits$NOMBRE.INSTITUCIÓN, ")"), locale = "es")
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD para poder desplazar id e posición correcta
nIESct2ctunits$id <- 1:nrow(nIESct2ctunits)
ultimoIdBBDD = 237
nIESct2ctunits$id <- nIESct2ctunits$id + ultimoIdBBDD
colnames(nIESct2ctunits)
nIESct2ctunits <- nIESct2
nIESct2ctunitsLevels <- subset(nIESct2ctunits , select = c(2, 16) )
nIESct2ctunitsLevels <- nIESct2ctunitsLevels[!duplicated(nIESct2ctunitsLevels$CÓDIGO.CARRERA),]
names(nIESct2ctunitsLevels)[2]<-paste("ctlevelTitle")
nIESct2ctunitsLevels <- merge(nIESct2ctunitsLevels , nIESct2ctlevel , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
nIESct2ctunitsLevels <- subset(nIESct2ctunitsLevels, select = c(2,5))
nIESct2ctunits <- merge(nIESct2ctunits , nIESct2ctunitsLevels , by.x = 'CÓDIGO.CARRERA',by.y ='CÓDIGO.CARRERA', all.x=TRUE)
names(nIESct2ctunits)[18]<-paste("ctlevel_id")
nIESct2ctunits$ctunitTitle <- str_to_title(paste( nIESct2ctunits$NOMBRE.CARRERA," ( ", nIESct2ctunits$NOMBRE.INSTITUCIÓN, ")"), locale = "es")
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD para poder desplazar id e posición correcta
nIESct2ctunits$id <- 1:nrow(nIESct2ctunits)
ultimoIdBBDD = 237
nIESct2ctunits$id <- nIESct2ctunits$id + ultimoIdBBDD
nIESct2ctunits <- subset(nIESct2ctunits, select = c(17, 18, 20, 19, ))
write.table(nIESct2ctunits, "nIESct2ctunits.csv", sep="$", append=FALSE, row.names = F, quote = FALSE, na = "NA")
nIESct2ctunits <- nIESct2
nIESct2ctunitsLevels <- subset(nIESct2ctunits , select = c(2, 16) )
nIESct2ctunitsLevels <- nIESct2ctunitsLevels[!duplicated(nIESct2ctunitsLevels$CÓDIGO.CARRERA),]
names(nIESct2ctunitsLevels)[2]<-paste("ctlevelTitle")
nIESct2ctunitsLevels <- merge(nIESct2ctunitsLevels , nIESct2ctlevel , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
nIESct2ctunitsLevels <- subset(nIESct2ctunitsLevels, select = c(2,5))
nIESct2ctunits <- merge(nIESct2ctunits , nIESct2ctunitsLevels , by.x = 'CÓDIGO.CARRERA',by.y ='CÓDIGO.CARRERA', all.x=TRUE)
names(nIESct2ctunits)[18]<-paste("ctlevel_id")
nIESct2ctunits$ctunitTitle <- str_to_title(paste( nIESct2ctunits$NOMBRE.CARRERA," ( ", nIESct2ctunits$NOMBRE.INSTITUCIÓN, ")"), locale = "es")
colnames(nIESct2ctunits)
nIESct2ctunits <- subset(nIESct2ctunits, select = c(17, 18, 19 ))
nIESct2ctunits
View(nIESct2ctunits)
nIESct2ctunits <- nIESct2
nIESct2ctunitsLevels <- subset(nIESct2ctunits , select = c(2, 16) )
nIESct2ctunitsLevels <- nIESct2ctunitsLevels[!duplicated(nIESct2ctunitsLevels$CÓDIGO.CARRERA),]
names(nIESct2ctunitsLevels)[2]<-paste("ctlevelTitle")
nIESct2ctunitsLevels <- merge(nIESct2ctunitsLevels , nIESct2ctlevel , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
nIESct2ctunitsLevels <- subset(nIESct2ctunitsLevels, select = c(2,5))
nIESct2ctunits <- merge(nIESct2ctunits , nIESct2ctunitsLevels , by.x = 'CÓDIGO.CARRERA',by.y ='CÓDIGO.CARRERA', all.x=TRUE)
names(nIESct2ctunits)[18]<-paste("ctlevel_id")
nIESct2ctunits$ctunitTitle <- str_to_title(paste( nIESct2ctunits$NOMBRE.CARRERA," ( ", nIESct2ctunits$NOMBRE.INSTITUCIÓN, ")"), locale = "es")
View(nIESct2ctunits)
nIESct2ctunits <- subset(nIESct2ctunits, select = c(17, 18, 19, 1 ))
View(nIESct2ctunits)
nIESct2ctunits <- nIESct2
nIESct2ctunitsLevels <- subset(nIESct2ctunits , select = c(2, 16) )
nIESct2ctunitsLevels <- nIESct2ctunitsLevels[!duplicated(nIESct2ctunitsLevels$CÓDIGO.CARRERA),]
names(nIESct2ctunitsLevels)[2]<-paste("ctlevelTitle")
nIESct2ctunitsLevels <- merge(nIESct2ctunitsLevels , nIESct2ctlevel , by.x = 'ctlevelTitle',by.y ='ctlevelTitle', all.x=TRUE)
nIESct2ctunitsLevels <- subset(nIESct2ctunitsLevels, select = c(2,5))
nIESct2ctunits <- merge(nIESct2ctunits , nIESct2ctunitsLevels , by.x = 'CÓDIGO.CARRERA',by.y ='CÓDIGO.CARRERA', all.x=TRUE)
names(nIESct2ctunits)[18]<-paste("ctlevel_id")
nIESct2ctunits$ctunitTitle <- str_to_title(paste( nIESct2ctunits$NOMBRE.CARRERA," ( ", nIESct2ctunits$NOMBRE.INSTITUCIÓN, ")"), locale = "es")
nIESct2ctunits <- subset(nIESct2ctunits, select = c(17, 18, 19, 1 ))
nIESct2ctunits2 <- nIESct2ctunits[!duplicated(nIESct2ctunits$CÓDIGO.CARRERA),]
View(nIESct2ctunits2)
#crea id, se debe incluir manualmente el id que sigue al último id ya carga en la BBDD para poder desplazar id e posición correcta
nIESct2ctunits2$id <- 1:nrow(nIESct2ctunits2)
ultimoIdBBDD = 237
nIESct2ctunits2$id <- nIESct2ctunits2$id + ultimoIdBBDD
write.table(nIESct2ctunits2, "nIESct2ctunits2.csv", sep="$", append=FALSE, row.names = F, quote = FALSE, na = "NA")
View(nIESct2ctunits2)
reticulate::repl_python()
print('hello')
reticulate::repl_python()
nIESct2contents <- nIESct2
View(nIESct2ctlevel)
nIESct2ctmetas <- nIESct2
